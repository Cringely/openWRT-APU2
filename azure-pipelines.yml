trigger:
  - master

jobs:
- job: Build
  timeoutInMinutes: 0

  pool:
    vmImage: 'ubuntu-22.04'

  variables:
    openwrtRelease: '22.03.2'
    gcc: 'gcc-11.2.0'
    workingDirectory: '$(Build.SourcesDirectory)/openwrt'

  steps:
  - task: ado-discord-webhook@1
    inputs:
      channelId: '$(channelId)'
      webhookKey: '$(webhookKey)'
      name: '$(openwrtRelease)_$(Build.BuildNumber)'
      messageType: 'content'
      content: |
        'Build $(Agent.JobName) Started 
        Pipeline started $(Build.Reason)'
  
  - script: |
      sudo apt update
      sudo apt upgrade
      sudo apt-get -q -y install build-essential clang flex g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev
      sudo apt-get -q -y autoremove
      sudo apt-get -q -y autoclean
      sudo apt-get -q -y clean
    displayName: 'Install dependencies'

  - script: |
      umask 0022
      git clone https://github.com/openwrt/openwrt.git
    displayName: 'Clone OpenWrt git repo'

  - script: git checkout v$(openwrtRelease)
    workingDirectory: $(workingDirectory)
    displayName: 'Checkout $(openwrtRelease)'
    
  - script: wget https://downloads.openwrt.org/releases/$(openwrtRelease)/targets/x86/64/openwrt-toolchain-$(openwrtRelease)-x86-64_$(gcc)_musl.Linux-x86_64.tar.xz
    workingDirectory: $(workingDirectory)
    displayName: 'Download toolchain'
    
  - script: |
      ls -la
      tar -xf openwrt-toolchain-$(openwrtRelease)-x86-64_$(gcc)_musl.Linux-x86_64.tar.xz
      ls -la
    workingDirectory: $(workingDirectory)
    displayName: 'Extract toolchain'
    
  - script: cp .config $(workingDirectory)
    displayName: 'Copy .config file'
    
  - script: |
      #sed -i 's!CONFIG_TOOLCHAIN_ROOT="/opt/cross/x86_64-unknown-linux-gnu"!CONFIG_TOOLCHAIN_ROOT="$(workingDirectory)/openwrt-toolchain-$(openwrtRelease)-x86-64_$(gcc)_musl.Linux-x86_64/toolchain-x86_64_$(gcc)_musl"!' .config
      ./scripts/ext-toolchain.sh \
        --toolchain $(workingDirectory)/openwrt-toolchain-$(openwrtRelease)-x86-64_$(gcc)_musl.Linux-x86_64 \
        --overwrite-config \
        --config 'x86/64'        
    workingDirectory: $(workingDirectory)
    displayName: 'Update toolchain'

  - script: |
      VERSION=`cat version`
      echo OpenWrt version is $VERSION
      echo "##vso[task.setvariable variable=openwrtVersion]$VERSION"
    workingDirectory: $(workingDirectory)
    displayName: 'Get version'

  - script: |
      ./scripts/feeds update -a
      ./scripts/feeds install -a
    workingDirectory: $(workingDirectory)
    displayName: 'Update package feeds'

  - script: |
      NPROC=$((`nproc`+1))
      echo Number of CPUs is $NPROC
      df -h
    displayName: 'Print number of CPUs'

  - script: |
      export TERM=linux
      make -j$((`nproc`+1))
    workingDirectory: $(workingDirectory)
    displayName: 'Build the project'

  - script: df -h
    displayName: 'Print disk space'

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(workingDirectory)/bin/targets/x86/64
      contents: '*'
      targetFolder: $(Build.ArtifactStagingDirectory)

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'

  - task: GithubRelease@0
    displayName: 'Create GitHub Release'
    inputs:
      gitHubConnection: github.com_Cringely
      repositoryName: Cringely/openWRT-APU2
      tagSource: manual
      tag: '$(openwrtRelease)_$(Build.BuildNumber)'
      assets: |
        $(Build.ArtifactStagingDirectory)/*
        
  - task: ado-discord-webhook@1
    inputs:
      channelId: '$(channelId)'
      webhookKey: '$(webhookKey)'
      name: '$(openwrtRelease)_$(Build.BuildNumber)'
      messageType: 'content'
      content: ' Completed $(Agent.JobName) with status $(Agent.JobStatus)'
