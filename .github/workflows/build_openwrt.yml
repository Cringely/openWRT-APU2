name: Build OpenWRT
on:
  push:
    branches:
      - main
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      openwrtRelease: 22.03.3
      gcc: gcc-11.2.0
      workingDirectory: openwrt

    #defaults:
    #run:
    #shell: bash
    #working-directory: openwrt

    strategy:
      fail-fast: false
      matrix:
        target: [x86-64]

    steps:
      - name: Actions Status Discord
        uses: sarisia/actions-status-discord@v1.11.0
        if: always()
        with:
          webhook: ${{ secrets.discordWebhook }}

      #- name: Install and Update dependencies
        #run: |
          #sudo apt update
          #sudo apt-get -q -y full-upgrade
          #sudo apt-get -q -y install build-essential clang flex g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3-distutils rsync unzip zlib1g-dev
          #sudo apt-get -q -y autoremove
          #sudo apt-get -q -y autoclean
          #sudo apt-get -q -y clean

      #- name: clean worker
        #run: |
          #sudo rm -rf ${{ github.workspace }}/*
          #sudo rm -rf ${{ github.workspace }}/*.*
          #sudo rm -rf ${{ github.workspace }}/.git*

      - name: Git Clone Action
        uses: sudosubin/git-clone-action@v1.0.1
        with:
          path: openwrt

      - name: Checkout openwrt
        uses: actions/checkout@v3.3.0
        with:
          repository: openwrt/openwrt
          path: openwrt
          ref: v${{ env.openwrtRelease }}

      - name: Copy .config file
        run: |
          pwd
          ls -la
          cp .config ${{ env.workingDirectory }}

      - name: create diffconfig
        run: |
          ./scripts/diffconfig.sh > diffconfig
          cp diffconfig .config

      - name: Get version
        run: |
          VERSION=`cat version`
          echo OpenWrt version is $VERSION
          echo "##vso[task.setvariable variable=openwrtVersion]$VERSION"

      - name: Update package feeds
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Print number of CPUs
        run: |
          NPROC=$(`nproc`+1)
          echo Number of CPUs is $NPROC
          df -h

      - name: make defconfig
        run: |
          export TERM=linux
          make -j$(`nproc`+1) defconfig

      - name: make download
        run: |
          export TERM=linux
          make -j$(`nproc`+1) download

      - name: Build the project
        run: |
          export TERM=linux
          make -j$(`nproc`+1)

      - name: Print disk space
        run: df -h

      - run: Copy '${{ env.workingDirectory }}/bin/targets/x86/64/*' '${{ github.workspace }}'
      - uses: actions/upload-artifact@v2
        with:
          path:
          name: openwrt-${{ env.openwrtRelease }}-x86-64-APU2-${{ github.run_number }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.openwrtRelease }}_${{ github.run_number }}

      - name: Actions Status Discord
        uses: sarisia/actions-status-discord@v1.11.0
        if: always()
        with:
          webhook: ${{ secrets.discordWebhook }}
